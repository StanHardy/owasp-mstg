name: Documents Build

on: [push, workflow_dispatch]

env:
  VERSION: "1.2"

jobs:

  generate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Generate English PDF
      run: ./tools/docker/pandoc_makedocs.sh Document ${{env.VERSION}}

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: OWASP_MSTG-${{env.VERSION}}
        path: OWASP_MSTG-${{env.VERSION}}*

  #   - name: Listing of root directory
  #     run: ls -l

  #   - name: Listing of root directory
  #     run: ls -l tools/

    - name: Upload RECENT Changes
      uses: actions/upload-artifact@v2
      if: startsWith(github.ref, 'refs/tags/') && (github.actor == 'cpholguera' || github.actor == 'sushi2k')
      with:
        name: RECENT_CHANGES.md
        path: tools/RECENT_CHANGES.md


  release:
    runs-on: ubuntu-latest
    needs: [generate]
    if: startsWith(github.ref, 'refs/tags/') && (github.actor == 'cpholguera' || github.actor == 'sushi2k')
    steps:
      - uses: actions/download-artifact@v2
      - name: List Downloaded document (sampling of download-artifact)
        run: ls -l OWASP_MSTG*
      # - name: Move all documents (pdf, epub and docx) to root
      #   run: mv OWASP_MSTG-*-*/* .
      # Produces error: 
      #   mv: cannot stat 'OWASP_MSTG-*-*/*': No such file or directory
      #   Error: Process completed with exit code 1.
      - name: print working directory
        run: pwd 
      - name: Listing of root directory
        run: ls -l 
      # - name: Cleanup - Remove all downloaded documents
      #   run: rm -rf OWASP_MSTG-*/
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: RECENT_CHANGES.md/RECENT_CHANGES.md
          # body_path: RECENT_CHANGES.md
          # body: 'MSTG test'
          files: |
            OWASP_MSTG-*/OWASP_MSTG-*.pdf
            OWASP_MSTG-*/OWASP_MSTG-*.epub
            OWASP_MSTG-*/OWASP_MSTG-*.docx
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
